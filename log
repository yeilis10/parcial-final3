import re
import requests
import json
from collections import defaultdict

# Expresión regular para extraer IP, fecha, método y ruta
regex = r"^(\d{1,3}(?:\.\d{1,3}){3}) - - \[(\d{2}/[a-zA-Z]{3}/\d{4}):\d{2}:\d{2}:\d{2} \+\d{4}\] \"(\w+) (/[^ ]*) HTTP/\d\.\d\" \d{3}"

# Ruta base de tus archivos
ruta_base ="C:\Users\yeili\OneDrive\log"

# Función para extraer datos de una línea de log
def extract_data(linea):
    return re.findall(regex, linea)

# Función para obtener ubicación geográfica de la IP
def obtener_ubicacion(ip):
    try:
        response = requests.get(f"http://ip-api.com/json/{ip}", timeout=5).json()
        return {
            "pais": response.get("country", "Desconocido"),
            "ciudad": response.get("city", "Desconocido")
        }
    except Exception as e:
        print(f"Error obteniendo ubicación para {ip}: {e}")
        return {"pais": "Error", "ciudad": "Error"}

# Diccionario para guardar la información agrupada por IP
datos_por_ip = defaultdict(list)

# Procesar los tres archivos de log
for i in range(1, 4):
    ruta = f"{ruta_base}{i}"
    try:
        with open(ruta, "r") as archivo:
            for linea in archivo:
                resultados = extract_data(linea)
                for ip, fecha, metodo, ruta in resultados:
                    datos_por_ip[ip].append({
                        "fecha": fecha,
                        "metodo": metodo,
                        "ruta": ruta
                    })
    except FileNotFoundError:
        print(f"No se encontró el archivo: {ruta}")

# Construcción del resultado final con ubicación por IP
resultado_final = []

for ip, peticiones in datos_por_ip.items():
    ubicacion = obtener_ubicacion(ip)
    resultado_final.append({
        "ip": ip,
        "pais": ubicacion["pais"],
        "ciudad": ubicacion["ciudad"],
        "peticiones": peticiones
    })

# Mostrar el resultado como JSON
print(json.dumps(resultado_final, indent=4, ensure_ascii=False))
